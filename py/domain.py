def create_domain(domain_name):
  print('\n=== Creating domain %s ===' % domain_name)
  print('\nReading Default template %s'  % wl_template)
  readTemplate(wl_template)
  print('\nChanging template settings')
  setOption('DomainName'     , domain_name)
  setOption('JavaHome'       , java_home)
  setOption('NodeManagerType', 'PerDomainNodeManager')
  setOption('OverwriteDomain', 'false')
  setOption('ServerStartMode', 'prod')
  setOption('AppDir'         , domain_application_home)
  cd('/Security/base_domain/User/weblogic')
  cmo.setName(wl_user_name)
  cmo.setUserPassword(wl_user_pass)
  cd('/')
  print('\nWriting domain %s to %s' % (domain_name, domain_home))
  writeDomain(domain_home)
  closeTemplate()


def configure_domain(domain_name):
  print('\n=== Configuring domain %s ===' % domain_name)
  readDomain(domain_home)
  cmo.setConfigBackupEnabled(true)
  cmo.setConfigurationAuditType('log')
  # AdminServer Configuration
  cd('/Servers/' + admin_server_name)
  cmo.setListenAddress(admin_listen_address)
  create(admin_server_name,'SSL')
  cd('/Servers/' + admin_server_name + '/SSL/' + admin_server_name)
  cmo.setEnabled(true)
  cmo.setListenPort(wl_servers[admin_server_name]['https_port'])
  cd('/Servers/' + admin_server_name)
  create(admin_server_name,'Log')
  cd('/Servers/' + admin_server_name + '/Log/' + admin_server_name)
  cmo.setRedirectStderrToServerLogEnabled(true)
  cmo.setRedirectStdoutToServerLogEnabled(true)
  cmo.setMemoryBufferSeverity('Debug')
  cd('/Servers/' + admin_server_name)
  create(admin_server_name,'ServerStart')
  cd('/Servers/' + admin_server_name + '/ServerStart/' + admin_server_name)
  cmo.setArguments(admin_server_jvm_args)
  # Node Manager Configuration
  cd('/NMProperties')
  set('ListenAddress', nm_listen_address)
  cd('/SecurityConfiguration/' + domain_name)
  cmo.setNodeManagerUsername(nm_user_name)
  cmo.setNodeManagerPasswordEncrypted(nm_user_pass)
  print('\nUpdating domain %s \n' % domain_name)
  updateDomain()
  closeDomain()

def create_and_configure_domain():
  create_domain(domain_name)
  configure_domain(domain_name)
